#!/bin/sh

[ "$ACTION" = ifup ] || exit 0

. /usr/share/flashman_init.conf
. /lib/functions/network.sh
. /usr/share/functions/network_functions.sh

network_find_wan extiface
network_find_wan6 ext6iface

update_lan_ip() {
  local _lan_addr=""
  while true
  do
    _lan_addr="$(ifstatus lan | jsonfilter -e '@["ipv4-address"][0]["address"]')"
    valid_ip "$_lan_addr"
    _retstatus=$?
    if [ $_retstatus -eq 0 ]
    then
      break
    fi
    sleep 3
  done
  # Replace LAN IP so Flash App can find the router
  sed -i 's/.*anlixrouter/'"$_lan_addr"' anlixrouter/' /etc/hosts
  /etc/init.d/uhttpd restart
  /etc/init.d/minisapo reload
  /etc/init.d/miniupnpd reload
}
#extiface is lan on bridge and wan on router
[ "$INTERFACE" = "$extiface" ] && update_lan_ip

set_dns_proxy_config() {
  local _dns_sv_list

  if [ "$(uci get dhcp.@dnsmasq[0].noproxy)" == "1" ]
  then
    local _sv_list_opt="6"
    # Check resolv conf
    cat /tmp/resolv.conf.auto | grep -q "nameserver"
    if [ $? -eq 0 ]
    then
      # Remove only the dns options
      for i in $(uci get dhcp.lan.dhcp_option)
      do
        if [ "$i" != "${i#$_sv_list_opt}" ]
        then
          uci del_list dhcp.lan.dhcp_option=$i
        fi
      done
      # Create DNS list. Only IPv4
      _dns_sv_list=$(cat /tmp/resolv.conf.auto | grep "nameserver" | grep "\." | awk '{print $2}')
      for _dns_sv in $_dns_sv_list
      do
        valid_ip "$_dns_sv"
        _retstatus=$?
        if [ $_retstatus -eq 0 ]
        then
          _sv_list_opt="$_sv_list_opt,$_dns_sv"
        fi
      done
      uci add_list dhcp.lan.dhcp_option="$_sv_list_opt"

      uci get dhcp.lan.dns > /dev/null 2>&1
      if [ $? -eq 0 ]
      then
        uci delete dhcp.lan.dns
      fi
      # Create DNS list. Only IPv6
      _dns_sv_list=$(cat /tmp/resolv.conf.auto | grep "nameserver" | grep "\:" | awk '{print $2}')
      for _dns_sv in $_dns_sv_list
      do
        uci add_list dhcp.lan.dns="$_dns_sv"
      done

      uci commit dhcp
    fi
  else
    # Remove only the dns options
    for i in $(uci get dhcp.lan.dhcp_option)
    do
      if [ "$i" != "${i#$_sv_list_opt}" ]
      then
        uci del_list dhcp.lan.dhcp_option=$i
      fi
    done
    uci get dhcp.lan.dns > /dev/null 2>&1
    if [ $? -eq 0 ]
    then
      uci delete dhcp.lan.dns
    fi
    uci commit dhcp
  fi
}

if [ "$(get_bridge_mode_status)" != "y" ]
then
  if [ "$INTERFACE" = "lan" ] || [ "$INTERFACE" = "$extiface" ]
  then
    # Use proxy or give DNS addresses directly
    set_dns_proxy_config

    # Fix dnsmasq and iface race condition
    [ "$INTERFACE" = "$extiface" ] && /etc/init.d/dnsmasq enabled && /etc/init.d/dnsmasq restart
  fi

  # Fix dhcp and iface wan6 race condition
  [ "$INTERFACE" = "$ext6iface" ] && /etc/init.d/odhcpd enabled && /etc/init.d/odhcpd restart
fi

