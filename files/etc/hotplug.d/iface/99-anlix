#!/bin/sh

[ "$ACTION" = ifup ] || exit 0

valid_ip() {
  local ip=$1
  local filtered_ip
  local stat=1
  local b1
  local b2
  local b3
  local b4

  filtered_ip=$(printf "%s\n" "$ip" |
                grep -E '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$')

  if [ "$filtered_ip" != "" ]
  then
    b1="$(echo $ip | awk -F. '{print $1}')"
    b2="$(echo $ip | awk -F. '{print $2}')"
    b3="$(echo $ip | awk -F. '{print $3}')"
    b4="$(echo $ip | awk -F. '{print $4}')"

    [[ $b1 -le 255 && $b2 -le 255 && $b3 -le 255 && $b4 -le 255 ]]
    stat=$?
  fi
  return $stat
}

update_lan_ip() {
  local _lan_addr=""
  while true
  do
    _lan_addr="$(ifstatus lan | jsonfilter -e '@["ipv4-address"][0]["address"]')"
    valid_ip "$_lan_addr"
    _retstatus=$?
    if [ $_retstatus -eq 0 ]
    then
      break
    fi
    sleep 3
  done
  # Replace LAN IP so Flash App can find the router
  sed -i 's/.*anlixrouter/'"$_lan_addr"' anlixrouter/' /etc/hosts
  /etc/init.d/uhttpd restart
  /etc/init.d/minisapo restart
}
[ "$INTERFACE" = "wan" ] && update_lan_ip

set_dns_proxy_config() {
  local _dns_sv_list

  if [ "$(uci get dhcp.@dnsmasq[0].noproxy)" == "1" ]
  then
    local _sv_list_opt="6"
    # Check resolv conf
    cat /tmp/resolv.conf.auto | grep -q "nameserver"
    if [ $? -eq 0 ]
    then
      # Remove only the dns options
      for i in $(uci get dhcp.lan.dhcp_option)
      do
        if [ "$i" != "${i#$_sv_list_opt}" ]
        then
          uci del_list dhcp.lan.dhcp_option=$i
        fi
      done
      # Create DNS list. Only IPv4
      _dns_sv_list=$(cat /tmp/resolv.conf.auto | grep "nameserver" | grep "\." | awk '{print $2}')
      for _dns_sv in $_dns_sv_list
      do
        valid_ip "$_dns_sv"
        _retstatus=$?
        if [ $_retstatus -eq 0 ]
        then
          _sv_list_opt="$_sv_list_opt,$_dns_sv"
        fi
      done
      uci add_list dhcp.lan.dhcp_option="$_sv_list_opt"

      uci get dhcp.lan.dns > /dev/null 2>&1
      if [ $? -eq 0 ]
      then
        uci delete dhcp.lan.dns
      fi
      # Create DNS list. Only IPv6
      _dns_sv_list=$(cat /tmp/resolv.conf.auto | grep "nameserver" | grep "\:" | awk '{print $2}')
      for _dns_sv in $_dns_sv_list
      do
        uci add_list dhcp.lan.dns="$_dns_sv"
      done

      uci commit dhcp
    fi
  else
    # Remove only the dns options
    for i in $(uci get dhcp.lan.dhcp_option)
    do
      if [ "$i" != "${i#$_sv_list_opt}" ]
      then
        uci del_list dhcp.lan.dhcp_option=$i
      fi
    done
    uci commit dhcp
    uci get dhcp.lan.dns > /dev/null 2>&1
    if [ $? -eq 0 ]
    then
      uci delete dhcp.lan.dns
      uci commit dhcp
    fi
  fi
}
# Use proxy or give DNS addresses directly
set_dns_proxy_config

# Fix dnsmasq and iface race condition
/etc/init.d/dnsmasq enabled && /etc/init.d/dnsmasq restart

# Fix dhcp and iface wan6 race condition
[ "$INTERFACE" = "wan6" ] && /etc/init.d/odhcpd enabled && /etc/init.d/odhcpd restart
