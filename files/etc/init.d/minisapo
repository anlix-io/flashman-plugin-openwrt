#!/bin/sh /etc/rc.common

. /usr/share/functions/device_functions.sh
. /usr/share/functions/network_functions.sh
. /usr/share/functions/wireless_functions.sh

START=9F
STOP=1F

USE_PROCD=1

valid_ip() {
  local ip=$1
  local filtered_ip
  local stat=1
  local b1
  local b2
  local b3
  local b4

  filtered_ip=$(printf "%s\n" "$ip" |
                grep -E '^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$')

  if [ "$filtered_ip" != "" ]
  then
    b1="$(echo $ip | awk -F. '{print $1}')"
    b2="$(echo $ip | awk -F. '{print $2}')"
    b3="$(echo $ip | awk -F. '{print $3}')"
    b4="$(echo $ip | awk -F. '{print $4}')"

    [[ $b1 -le 255 && $b2 -le 255 && $b3 -le 255 && $b4 -le 255 ]]
    stat=$?
  fi
  return $stat
}

start_service() {
  BRIDGE_IP_ADDR=""
  while true
  do
    BRIDGE_IP_ADDR="$(get_lan_bridge_ipaddr)"
    valid_ip "$BRIDGE_IP_ADDR"
    _retstatus=$?
    if [ $_retstatus -eq 0 ]
    then
      break
    fi
    sleep 5
  done
  CACHE_PATH="/tmp/sapo-cache.json"
  MAC="$(get_mac)"
  SSID="$(get_wifi_local_config | jsonfilter -e '@["local_ssid_24"]')"
  SSID_5="$(get_wifi_local_config | jsonfilter -e '@["local_ssid_50"]')"

  procd_open_instance
  procd_set_param command minisapo "$CACHE_PATH" "$BRIDGE_IP_ADDR" "$MAC" "$SSID" "$SSID_5"
  procd_set_param respawn
  procd_set_param stdout 1 # forward stdout of the command to logd
  procd_set_param stderr 1 # same for stderr
  procd_set_param pidfile /var/run/minisapo.pid
  procd_close_instance
}
