#!/bin/sh /etc/rc.common

. /usr/share/functions/device_functions.sh
. /usr/share/functions/network_functions.sh
. /usr/share/functions/wireless_functions.sh

START=9F
STOP=1F

USE_PROCD=1
radios=$(ubus list | grep hostapd.wlan)

start_service() {
  BRIDGE_IP_ADDR=""
  while true
  do
    BRIDGE_IP_ADDR="$(get_lan_bridge_ipaddr)"
    valid_ip "$BRIDGE_IP_ADDR"
    _retstatus=$?
    if [ $_retstatus -eq 0 ]
    then
      break
    fi
    sleep 5
  done
  json_init
  json_add_string "iface_ip" "$BRIDGE_IP_ADDR"
  json_add_string "mac" "$(get_mac)"
  json_add_string "ssid" "$(get_wifi_local_config | jsonfilter -e '@["local_ssid_24"]')"
  json_add_string "ssid_5" "$(get_wifi_local_config | jsonfilter -e '@["local_ssid_50"]')"
  [ "$(is_mesh_master)" = "1" ] && json_add_string "mesh" "$(get_mesh_mode)"
  for i in $radios
  do 
    [ "${i: -1}" = "0" ] && tlan="2" || tlan="5"
    json_add_string "mac_ssid$tlan" "$(ubus call $i rrm_nr_get_own | jsonfilter -e '$.value[0]')"
    json_add_string "meshid$tlan" "$(ubus call $i rrm_nr_get_own | jsonfilter -e '$.value[2]')"
  done
  PARAMS=`json_dump`
  json_cleanup

  procd_open_instance
  procd_set_param command minisapo 
  procd_append_param command "${PARAMS}"
  procd_set_param respawn
  procd_set_param stdout 1 # forward stdout of the command to logd
  procd_set_param stderr 1 # same for stderr
  procd_set_param pidfile /var/run/minisapo.pid
  procd_close_instance
}
